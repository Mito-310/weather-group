"""
LINEÈÄöÁü•„É¢„Ç∏„É•„Éº„É´
‰∏çÂø´ÊåáÊï∞„Å´Âøú„Åò„ÅüË≠¶Âëä„É°„ÉÉ„Çª„Éº„Ç∏„ÇíLINE„ÅßÈÄÅ‰ø°„Åô„Çã
"""
import os
from typing import Optional
from datetime import datetime
from linebot import LineBotApi
from linebot.models import TextSendMessage, FlexSendMessage
from linebot.exceptions import LineBotApiError


class LineNotifier:
    """LINEÈÄöÁü•„ÇØ„É©„Çπ"""

    def __init__(self, channel_access_token: Optional[str] = None, user_id: Optional[str] = None):
        """
        ÂàùÊúüÂåñ

        Args:
            channel_access_token: LINE„ÉÅ„É£„Éç„É´„Ç¢„ÇØ„Çª„Çπ„Éà„Éº„ÇØ„É≥ÔºàÁúÅÁï•ÊôÇ„ÅØÁí∞Â¢ÉÂ§âÊï∞„Åã„ÇâÂèñÂæóÔºâ
            user_id: ÈÄÅ‰ø°ÂÖà„ÅÆLINE„É¶„Éº„Ç∂„ÉºIDÔºàÁúÅÁï•ÊôÇ„ÅØÁí∞Â¢ÉÂ§âÊï∞„Åã„ÇâÂèñÂæóÔºâ
        """
        self.channel_access_token = channel_access_token or os.getenv('LINE_CHANNEL_ACCESS_TOKEN')
        self.user_id = user_id or os.getenv('LINE_USER_ID')

        if not self.channel_access_token:
            raise ValueError("LINE_CHANNEL_ACCESS_TOKEN„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì")
        if not self.user_id:
            raise ValueError("LINE_USER_ID„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì")

        self.line_bot_api = LineBotApi(self.channel_access_token)
        self.last_sent_level = None  # ÈÄ£Á∂öÈÄÅ‰ø°Èò≤Ê≠¢Áî®

    def send_discomfort_alert(self, temperature: float, humidity: float,
                             discomfort_index: float, wbgt: float,
                             risk_level: str, risk_info: dict) -> bool:
        """
        ‰∏çÂø´ÊåáÊï∞„Å´Âøú„Åò„ÅüË≠¶Âëä„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°

        Args:
            temperature: Ê∞óÊ∏©Ôºà‚ÑÉÔºâ
            humidity: ÊπøÂ∫¶Ôºà%Ôºâ
            discomfort_index: ‰∏çÂø´ÊåáÊï∞
            wbgt: WBGTÔºàÊöë„ÅïÊåáÊï∞Ôºâ
            risk_level: „É™„Çπ„ÇØ„É¨„Éô„É´Ôºà'caution', 'warning', 'severe_warning', 'danger'Ôºâ
            risk_info: „É™„Çπ„ÇØÊÉÖÂ†±„ÅÆËæûÊõ∏

        Returns:
            ÈÄÅ‰ø°ÊàêÂäüÊôÇ„ÅØTrue„ÄÅÂ§±ÊïóÊôÇ„ÅØFalse
        """
        # Ë≠¶Âëä„É¨„Éô„É´‰ª•‰∏ã„ÅØÈÄÅ‰ø°„Åó„Å™„ÅÑ
        if risk_level not in ['warning', 'severe_warning', 'danger']:
            return False

        # Âêå„Åò„É¨„Éô„É´„ÅÆÈÄ£Á∂öÈÄÅ‰ø°„ÇíÈò≤Ê≠¢
        if self.last_sent_level == risk_level:
            return False

        try:
            # Flex„É°„ÉÉ„Çª„Éº„Ç∏„Çí‰ΩúÊàê
            flex_message = self._create_flex_message(
                temperature, humidity, discomfort_index, wbgt,
                risk_level, risk_info
            )

            # „É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°
            self.line_bot_api.push_message(
                self.user_id,
                flex_message
            )

            self.last_sent_level = risk_level
            return True

        except LineBotApiError as e:
            print(f"LINEÈÄÅ‰ø°„Ç®„É©„Éº: {e}")
            return False
        except Exception as e:
            print(f"‰∫àÊúü„Åó„Å™„ÅÑ„Ç®„É©„Éº: {e}")
            return False

    def _create_flex_message(self, temperature: float, humidity: float,
                            discomfort_index: float, wbgt: float,
                            risk_level: str, risk_info: dict) -> FlexSendMessage:
        """
        Flex„É°„ÉÉ„Çª„Éº„Ç∏„Çí‰ΩúÊàê

        Args:
            temperature: Ê∞óÊ∏©
            humidity: ÊπøÂ∫¶
            discomfort_index: ‰∏çÂø´ÊåáÊï∞
            wbgt: WBGT
            risk_level: „É™„Çπ„ÇØ„É¨„Éô„É´
            risk_info: „É™„Çπ„ÇØÊÉÖÂ†±

        Returns:
            FlexSendMessage
        """
        # „Ç¢„Ç§„Ç≥„É≥„ÅÆÈÅ∏Êäû
        icon_map = {
            'warning': '‚ö†Ô∏è',
            'severe_warning': 'üö®',
            'danger': 'üÜò'
        }
        icon = icon_map.get(risk_level, '‚ö†Ô∏è')

        # ÁèæÂú®ÊôÇÂàª
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        # Flex„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ
        flex_content = {
            "type": "bubble",
            "size": "mega",
            "header": {
                "type": "box",
                "layout": "vertical",
                "contents": [
                    {
                        "type": "text",
                        "text": f"{icon} ÁÜ±‰∏≠ÁóáË≠¶Âëä",
                        "weight": "bold",
                        "size": "xl",
                        "color": "#ffffff"
                    }
                ],
                "backgroundColor": risk_info['color']
            },
            "body": {
                "type": "box",
                "layout": "vertical",
                "contents": [
                    {
                        "type": "text",
                        "text": risk_info['label'],
                        "weight": "bold",
                        "size": "xxl",
                        "color": risk_info['color'],
                        "align": "center",
                        "margin": "md"
                    },
                    {
                        "type": "separator",
                        "margin": "lg"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "margin": "lg",
                        "spacing": "sm",
                        "contents": [
                            {
                                "type": "box",
                                "layout": "baseline",
                                "spacing": "sm",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üå°Ô∏è Ê∞óÊ∏©",
                                        "color": "#aaaaaa",
                                        "size": "sm",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": f"{temperature}¬∞C",
                                        "wrap": True,
                                        "color": "#666666",
                                        "size": "md",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "spacing": "sm",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üíß ÊπøÂ∫¶",
                                        "color": "#aaaaaa",
                                        "size": "sm",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": f"{humidity}%",
                                        "wrap": True,
                                        "color": "#666666",
                                        "size": "md",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "spacing": "sm",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "üòì ‰∏çÂø´ÊåáÊï∞",
                                        "color": "#aaaaaa",
                                        "size": "sm",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": f"{discomfort_index}",
                                        "wrap": True,
                                        "color": "#666666",
                                        "size": "md",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            },
                            {
                                "type": "box",
                                "layout": "baseline",
                                "spacing": "sm",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "ü•µ WBGT",
                                        "color": "#aaaaaa",
                                        "size": "sm",
                                        "flex": 2
                                    },
                                    {
                                        "type": "text",
                                        "text": f"{wbgt}¬∞C",
                                        "wrap": True,
                                        "color": "#666666",
                                        "size": "md",
                                        "flex": 3,
                                        "weight": "bold"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "separator",
                        "margin": "lg"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "margin": "lg",
                        "contents": [
                            {
                                "type": "text",
                                "text": "üí° Êé®Â•®ÂØæÁ≠ñ",
                                "size": "sm",
                                "color": "#aaaaaa",
                                "weight": "bold"
                            },
                            {
                                "type": "text",
                                "text": risk_info['advice'],
                                "size": "md",
                                "wrap": True,
                                "color": "#666666",
                                "margin": "sm"
                            }
                        ]
                    },
                    {
                        "type": "separator",
                        "margin": "lg"
                    },
                    {
                        "type": "box",
                        "layout": "vertical",
                        "margin": "lg",
                        "contents": [
                            {
                                "type": "text",
                                "text": "‚ö†Ô∏è Ê≥®ÊÑè‰∫ãÈ†Ö",
                                "size": "sm",
                                "color": "#aaaaaa",
                                "weight": "bold"
                            },
                            {
                                "type": "text",
                                "text": self._get_precautions(risk_level),
                                "size": "sm",
                                "wrap": True,
                                "color": "#666666",
                                "margin": "sm"
                            }
                        ]
                    }
                ]
            },
            "footer": {
                "type": "box",
                "layout": "vertical",
                "contents": [
                    {
                        "type": "text",
                        "text": f"Ê∏¨ÂÆöÊôÇÂàª: {now}",
                        "size": "xs",
                        "color": "#aaaaaa",
                        "align": "center"
                    }
                ]
            }
        }

        return FlexSendMessage(
            alt_text=f"{icon} ÁÜ±‰∏≠ÁóáË≠¶Âëä: {risk_info['label']}",
            contents=flex_content
        )

    def _get_precautions(self, risk_level: str) -> str:
        """
        „É™„Çπ„ÇØ„É¨„Éô„É´„Å´Âøú„Åò„ÅüÊ≥®ÊÑè‰∫ãÈ†Ö„ÇíÂèñÂæó

        Args:
            risk_level: „É™„Çπ„ÇØ„É¨„Éô„É´

        Returns:
            Ê≥®ÊÑè‰∫ãÈ†Ö„ÅÆ„ÉÜ„Ç≠„Çπ„Éà
        """
        precautions = {
            'warning': '„Éª„Åì„Åæ„ÇÅ„Å™Ê∞¥ÂàÜ„ÉªÂ°©ÂàÜË£úÁµ¶\n„ÉªÈÅ©Â∫¶„Å™‰ºëÊÜ©„Çí„Å®„Çã\n„Éª‰ΩìË™ø„ÅÆÂ§âÂåñ„Å´Ê≥®ÊÑè',
            'severe_warning': '„ÉªÊøÄ„Åó„ÅÑÈÅãÂãï„ÅØ‰∏≠Ê≠¢\n„Éª15-20ÂàÜ„Åî„Å®„Å´Ê∞¥ÂàÜË£úÁµ¶\n„ÉªÊ∂º„Åó„ÅÑÂ†¥ÊâÄ„Åß‰ºëÊÜ©\n„Éª‰ΩìË™ø‰∏çËâØÊôÇ„ÅØÂåªÁôÇÊ©üÈñ¢„Å∏',
            'danger': '„ÉªÂ§ñÂá∫„ÇíÊéß„Åà„Çã\n„ÉªÂÜ∑Êàø„ÅÆÂäπ„ÅÑ„ÅüÂÆ§ÂÜÖ„Å∏\n„ÉªÁ∑äÊÄ•ÊôÇ„ÅØ119Áï™ÈÄöÂ†±\n„ÉªÈ´òÈΩ¢ËÄÖ„ÇÑÂ≠ê‰æõ„ÅØÁâπ„Å´Ê≥®ÊÑè'
        }
        return precautions.get(risk_level, '„Éª„Åì„Åæ„ÇÅ„Å™Ê∞¥ÂàÜË£úÁµ¶„ÇíÂøÉ„Åå„Åë„Åæ„Åó„Çá„ÅÜ')

    def send_simple_message(self, message: str) -> bool:
        """
        „Ç∑„É≥„Éó„É´„Å™„ÉÜ„Ç≠„Çπ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°

        Args:
            message: ÈÄÅ‰ø°„Åô„Çã„É°„ÉÉ„Çª„Éº„Ç∏

        Returns:
            ÈÄÅ‰ø°ÊàêÂäüÊôÇ„ÅØTrue„ÄÅÂ§±ÊïóÊôÇ„ÅØFalse
        """
        try:
            self.line_bot_api.push_message(
                self.user_id,
                TextSendMessage(text=message)
            )
            return True
        except LineBotApiError as e:
            print(f"LINEÈÄÅ‰ø°„Ç®„É©„Éº: {e}")
            return False
        except Exception as e:
            print(f"‰∫àÊúü„Åó„Å™„ÅÑ„Ç®„É©„Éº: {e}")
            return False

    def reset_last_sent_level(self):
        """ÊúÄÂæå„Å´ÈÄÅ‰ø°„Åó„Åü„É¨„Éô„É´„Çí„É™„Çª„ÉÉ„ÉàÔºà„ÉÜ„Çπ„ÉàÁî®Ôºâ"""
        self.last_sent_level = None
